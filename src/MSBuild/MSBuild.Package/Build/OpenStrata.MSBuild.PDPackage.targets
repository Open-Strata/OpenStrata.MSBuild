<!--
***********************************************************************************************
OpenStrata.MSBuild.PDPackage.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) 74Bravo LLC and Contributors. All rights reserved.. All rights reserved.
***********************************************************************************************
-->
<Project  xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >

	<UsingTask TaskName="OpenStrata.MSBuild.Package.Tasks.AssignPDSolutionStratiImportOrder" AssemblyFile="$(OpenStrataBuildPackageAssemblyFile)"     TaskFactory="TaskHostFactory" />

	<PropertyGroup>

	   <PDPublishOnBuild Condition="'$(PDPublishOnBuild)'==''">true</PDPublishOnBuild>

	   <PkgFolder Condition="'$(PkgFolder)'==''">PkgAssets</PkgFolder>

		<AssignStratiTargetPathsDependsOn>
		     $(AssignStratiTargetPathsDependsOn);
			 AssignPDPackageTargetProperties;
		     AssignStratiContentTargetPaths;
			 AssignStratiConfigDataTargetPaths;
			 AssignStratiManifestTargetPath;
		</AssignStratiTargetPathsDependsOn>

		<CreateImportStrataManifestDependsOn>
			GenerateLocalStratiManifest;
			$(CreateImportStrataManifestDependsOn)
		</CreateImportStrataManifestDependsOn>	

		<!-- 
		Metadata:
		  importorder
		  LayerOrderBehavior:  above, base, below 
		  
		-->

		<StratiImportOrderStartWith Condition="'$(StratiImportOrderStartWith)' == ''">1</StratiImportOrderStartWith>

		<SetStratiSolutionImportOrderDependsOn></SetStratiSolutionImportOrderDependsOn>

	</PropertyGroup>

	<Target Name="PDPublishOnBuild" AfterTargets="Build" DependsOnTargets="Publish" Condition="'$(PDPublishOnBuild)'=='true'" />


	<ItemGroup>
		<PowerPlatformPDPackageReference Include="@(PackageReference->WithMetadataValue('Identity', 'Microsoft.PowerApps.MSBuild.PDPackage'))" />
	</ItemGroup>


	<Target Name="AssignStratiTargetPaths" BeforeTargets="AssignTargetPaths" DependsOnTargets="$(AssignStratiTargetPathsDependsOn)" />

	<Target Name="AssignPDPackageTargetProperties">

		<PropertyGroup>
			<AssetsSrcDirectory>$(PkgFolder)</AssetsSrcDirectory>	   
			<PdAssetsTargetFolder>$(ImportPackageDataFolder)</PdAssetsTargetFolder>
		</PropertyGroup>
	</Target>


	<Target Name="AssignStratiContentTargetPaths" DependsOnTargets="AssignPDPackageTargetProperties"  >

		<ItemGroup>
			<ContentWithTargetPath Include="@(StratiPackageFiles->WithMetadataValue('PackageLocation', 'root'))">
				<TargetPath>%(StratiPackageFiles.RelativePublishPath)</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>%(StratiPackageFiles.Identity)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>

	
	<Target Name="AssignStratiConfigDataTargetPaths"  DependsOnTargets="AssignPDPackageTargetProperties"   >

		<ItemGroup>
			<ContentWithTargetPath Include="@(StratiPackageFiles->WithMetadataValue('PackageLocation', 'configdata'))">
				<TargetPath>$(PdAssetsTargetFolder)\%(StratiPackageFiles.RelativePublishPath)</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>%(StratiPackageFiles.Identity)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>	

	<Target Name="AssignStratiManifestTargetPath" DependsOnTargets="AssignPDPackageTargetProperties;CreateImportStrataManifest"  >

		<ItemGroup>
			<ContentWithTargetPath Include="$(ImportStrataManifestPath)">
				<TargetPath>$(PdAssetsTargetFolder)\importstrata.manifest</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>$(ImportStrataManifestPath)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>

	<Target Name="SetStratiSolutionImportOrder" BeforeTargets="_AnnotateSolutions" DependsOnTargets="CreateImportStrataManifest;GetPdPackageItemsFromReferences;$(SetStratiSolutionImportOrderDependsOn)" >

		<AssignPDSolutionStratiImportOrder
		    ImportStrataManifestPath="$(ImportStrataManifestPath)"
			ImportOrderStartsWith="$(StratiImportOrderStartWith)"
			StratiSolutions="@(PdSolution)" >
			<Output TaskParameter="SolutionsImportOrder"
				 ItemName="_solutionsImportOrder" />
		</AssignPDSolutionStratiImportOrder>

		<ItemGroup>
			<PdSolution Remove="%(_solutionsImportOrder.id)" />
			<PdSolution Include="@(_solutionsImportOrder)" />
		</ItemGroup>

		<Warning Text="%(PdSolution.importorder): %(PdSolution.id)" />
		
		
	</Target>	


</Project>
