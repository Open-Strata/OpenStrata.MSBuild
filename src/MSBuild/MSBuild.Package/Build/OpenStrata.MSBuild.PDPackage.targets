<!--
***********************************************************************************************
OpenStrata.MSBuild.PDPackage.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) 74Bravo LLC and Contributors. All rights reserved.. All rights reserved.
***********************************************************************************************
-->
<Project  xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >


	<PropertyGroup>

	   <PDPublishOnBuild Condition="'$(PDPublishOnBuild)'==''">true</PDPublishOnBuild>

	   <PkgFolder Condition="'$(PkgFolder)'==''">PkgAssets</PkgFolder>

		<AssignStratiTargetPathsDependsOn>
		     $(AssignStratiTargetPathsDependsOn);
		     AssignStratiContentTargetPaths;
			 AssignStratiConfigDataTargetPaths;
			 AssignStratiManifestTargetPath;
		</AssignStratiTargetPathsDependsOn>

		<CreateImportStrataManifestDependsOn>
			GenerateLocalStratiManifest;
			$(CreateImportStrataManifestDependsOn)
		</CreateImportStrataManifestDependsOn>	

	</PropertyGroup>


	<Target Name="PDPublishOnBuild" AfterTargets="Build" DependsOnTargets="Publish" Condition="'$(PDPublishOnBuild)'=='true'" />


	<ItemGroup>
		<PowerPlatformPDPackageReference Include="@(PackageReference->WithMetadataValue('Identity', 'Microsoft.PowerApps.MSBuild.PDPackage'))" />
	</ItemGroup>


	<Target Name="AssignStratiTargetPaths" BeforeTargets="AssignTargetPaths" DependsOnTargets="$(AssignStratiTargetPathsDependsOn)" />

	<Target Name="AssignStratiContentTargetPaths"  >

		<ItemGroup>
			<ContentWithTargetPath Include="@(StratiPackageFiles->WithMetadataValue('PackageLocation', 'root'))">
				<TargetPath>%(StratiPackageFiles.RelativePublishPath)</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>%(StratiPackageFiles.Identity)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>

	
	<Target Name="AssignStratiConfigDataTargetPaths"  >

		<ItemGroup>
			<ContentWithTargetPath Include="@(StratiPackageFiles->WithMetadataValue('PackageLocation', 'configdata'))">
				<TargetPath>$(PdAssetsTargetFolder)\%(StratiPackageFiles.RelativePublishPath)</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>%(StratiPackageFiles.Identity)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>	

	<Target Name="AssignStratiManifestTargetPath" DependsOnTargets="CreateImportStrataManifest"  >

		<ItemGroup>
			<ContentWithTargetPath Include="$(ImportStrataManifestPath)">
				<TargetPath>$(PdAssetsTargetFolder)\importstrata.manifest</TargetPath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<CopyToOutputDirectory>Never</CopyToOutputDirectory>
				<OriginalItemSpec>$(ImportStrataManifestPath)</OriginalItemSpec>
			</ContentWithTargetPath>
		</ItemGroup>

	</Target>		




</Project>
