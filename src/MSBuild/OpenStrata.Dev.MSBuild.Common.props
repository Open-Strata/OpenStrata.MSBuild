<?xml version="1.0" encoding="utf-8" ?>
<Project  xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >

	<Import Project="MSBuild.Shared\MSBuild.Shared.projitems" Label="MSBuild Shared"  />
	<!--<Import Project="MSBuild.Shared\MSBuild.Shared.projitems" Label="MSBuild Shared" Condition="'$(MSBuildProjectName)' != 'MSBuild'  " />-->

	<Import Project="..\shared\PublisherInfo.Shared\PublisherInfo.Shared.projitems" Label="PubisherInfo" />

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>

		<OpenStrata>OpenStrata</OpenStrata>		
		<AssemblyNamePrefix Condition="'$(DerivativeNamePrefix)'!=''">$(DerivativeNamePrefix).$(OpenStrata)</AssemblyNamePrefix>
		<AssemblyNamePrefix Condition="'$(DerivativeNamePrefix)'==''">$(OpenStrata)</AssemblyNamePrefix>
		<RootNamespacePrefix Condition="'$(DerivativeNamePrefix)'!=''">$(DerivativeNamePrefix).$(OpenStrata)</RootNamespacePrefix>
		<RootNamespacePrefix  Condition="'$(DerivativeNamePrefix)'==''">$(OpenStrata)</RootNamespacePrefix>

		<AssemblyName>$(AssemblyNamePrefix).$(MSBuildProjectName)</AssemblyName>
		<RootNamespace>$(RootNamespacePrefix).$(MSBuildProjectName)</RootNamespace>
		
		<OpenStrataProjectName>$(OpenStrata).$(MSBuildProjectName)</OpenStrataProjectName>
		<OpenStrataPackageName>$(RootNamespacePrefix).$(MSBuildProjectName)</OpenStrataPackageName>
		

		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<DelayCreationOfNugetPackage>true</DelayCreationOfNugetPackage>
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
		<DevelopmentDependency>true</DevelopmentDependency>
		
		<IsTool>true</IsTool>

		<IsMultiTargetingBuild Condition="'$(MSBuildProjectName)' == 'MSBuild.Deployment'">true</IsMultiTargetingBuild>
		<IsMultiTargetingBuild Condition="'$(MSBuildProjectName)' == 'MSBuild'">true</IsMultiTargetingBuild>		
		<!--<IsTransitiveDevelopmentDependency Condition="'$(MSBuildProjectName)' == 'MSBuild.Publisher'">true</IsTransitiveDevelopmentDependency>-->		
		
		<!--<IsTransitiveDevelopmentDependency Condition="'$(MSBuildProjectName)' == 'MSBuild.Stratify'">true</IsTransitiveDevelopmentDependency>-->
		<!--<IsTransitiveDevelopmentDependency Condition="'$(MSBuildProjectName)' == 'MSBuild.Publisher'">true</IsTransitiveDevelopmentDependency>-->

		<!--Deprecationg STRONG NAME behavior 
		<SignAssembly>true</SignAssembly>
		<AssemblyOriginatorKeyFile>$(AssemblyName).snk</AssemblyOriginatorKeyFile>

		<SNExe>$(MSBuildProjectDirectory)\..\..\..\tools\sn.exe</SNExe>-->

		<SkipOpenStrataMSBuildReference Condition="'$(MSBuildProjectName)' == 'MSBuild.Nuget'" >true</SkipOpenStrataMSBuildReference>
		<SkipOpenStrataMSBuildReference Condition="'$(MSBuildProjectName)' == 'MSBuild'" >true</SkipOpenStrataMSBuildReference>
		<SkipOpenStrataMSBuildReference Condition="'$(MSBuildProjectName)' == 'MSBuild.Publisher.New'" >true</SkipOpenStrataMSBuildReference>
	</PropertyGroup>

	<PropertyGroup Label="DocFxProperties">
		<!--<OutputFolder>$(MSBuildThisFileDirectory)docfx\$(AssemblyName)\</OutputFolder>-->		
		<!--<DocfxConfigFile>/docfx.json</DocfxConfigFile>-->
		<!--<DocumentationFile>$(OutputFolder)$(MSBuildProjectName).xml</DocumentationFile>-->
		<!--<DocumentationFile>$(MSBuildProjectName).xml</DocumentationFile>-->
	</PropertyGroup>	


	<PropertyGroup>
		<PrepareForOpenStrataDevBuildDependsOn>EnsureMSBuildPropsAndTargets; $(PrepareForOpenStrataDevBuildDependsOn)</PrepareForOpenStrataDevBuildDependsOn>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference
			Include="Microsoft.Build.Utilities.Core"
			Version="17.0.0"
			PrivateAssets="all"
			IncludeAssets="compile;runtime;build;native;contentfiles;analyzers;buildtransitive"
			
			/>
		<PackageReference
			Include="Microsoft.Extensions.DependencyInjection"
			Version="6.0.0"
			PrivateAssets="all"
			IncludeAssets="compile;runtime;build;native;contentfiles;analyzers;buildtransitive"			
			/>
	</ItemGroup>
		

	<ItemGroup Condition="'$(MSBuildProjectName)' != 'MSBuild.Nuget'">
		<PackageReference Include="OpenStrata.MSBuild.Nuget" Version="1.*" >
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	
	<!--Items to support building custom tasks-->

	<ItemGroup Condition="'$(SkipOpenStrataMSBuildReference)' != 'true'">
		<!--<ProjectReference Include="..\MSBuild\MSBuild.csproj" >
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
		</ProjectReference>-->

		<PackageReferenceRequiredForInstall Include="OpenStrata.MSBuild" Version="0.8.*" />

	</ItemGroup>

	<ItemGroup>
		<None Include="Build\$(OpenStrataProjectName).props" Pack="true" PackagePath="\build\$(OpenStrataPackageName).props"  />
		<None Include="Build\$(OpenStrataProjectName).props" Pack="true" PackagePath="\buildTransitive\$(OpenStrataPackageName).props" Condition="'$(IsTransitiveDevelopmentDependency)' == 'true'" />
		<None Include="Build\$(OpenStrataProjectName).props" Pack="true" PackagePath="\buildMultiTargeting\$(OpenStrataPackageName).props" Condition="'$(IsMultiTargetingBuild)' == 'true'" />
		<None Include="Build\$(OpenStrataProjectName).targets" Pack="true" PackagePath="\build\$(OpenStrataPackageName).targets" />
		<None Include="Build\$(OpenStrataProjectName).targets" Pack="true" PackagePath="\buildTransitive\$(OpenStrataPackageName).targets" Condition="'$(IsTransitiveDevelopmentDependency)' == 'true'" />
		<None Include="Build\$(OpenStrataProjectName).targets" Pack="true" PackagePath="\buildMultiTargeting\$(OpenStrataPackageName).targets" Condition="'$(IsMultiTargetingBuild)' == 'true'" />
	</ItemGroup>

	<PropertyGroup>
		<!--Setting AfterMicrosoftNETSdkTargets to trigger the importing of OpenStrata.Dev.MSBuild.Common.targets when appropriate.-->
		<AfterMicrosoftNETSdkTargets>
			$(AfterMicrosoftNETSdkTargets);
			$(MSBuildThisFileDirectory)OpenStrata.Dev.MSBuild.Common.targets
		</AfterMicrosoftNETSdkTargets>

		<GenerateNuspecDependsOn>UpdatePackageReferenceRequiredForInstall; $(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>

	</PropertyGroup>	

</Project>
