#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenStrata.Xrm.Sdk
{
	
	
	/// <summary>
	/// Business Process Type.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_businessprocesstype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BusinessFlow = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TaskFlow = 1,
	}
	
	/// <summary>
	/// Category of the process.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_category
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Workflow = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dialog = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BusinessRule = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Action = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BusinessProcessFlow = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModernFlow = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesktopFlow = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AIFlow = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WebClientAPIFlow = 9000,
	}
	
	/// <summary>
	/// Mode of the process.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_mode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Background = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Realtime = 1,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum processtrigger_scope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Form = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Entity = 2,
	}
	
	/// <summary>
	/// Workflow scope.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_scope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		User = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BusinessUnit = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParentChildBusinessUnits = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Organization = 4,
	}
	
	/// <summary>
	/// Status of the workflow
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Activated = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 2,
	}
	
	/// <summary>
	/// Reason for the status of the workflow
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Activated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompanyDLPViolation = 3,
	}
	
	/// <summary>
	/// Type of workflow throttling behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_throttlingbehaviortype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TenantPool = 1,
	}
	
	/// <summary>
	/// Workflow type.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Definition = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Activation = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Template = 3,
	}
	
	/// <summary>
	/// Type of the UI Flow process.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum workflow_uiflowtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Windowsrecorder_V1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SeleniumIDE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PowerAutomateDesktop = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Recording = 101,
	}
	
	/// <summary>
	/// Set of logical rules that define the steps necessary to automate a specific business process, task, or set of actions to be performed.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("workflow")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Workflow : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Workflow() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "workflow";
		
		public const string EntityLogicalCollectionName = "workflows";
		
		public const string EntitySetName = "workflows";
		
		/// <summary>
		/// Unique identifier of the latest activation record for the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeworkflowid")]
		public Microsoft.Xrm.Sdk.EntityReference ActiveWorkflowId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("activeworkflowid");
			}
		}
		
		/// <summary>
		/// Indicates whether the asynchronous system job is automatically deleted on completion.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncautodelete")]
		public System.Nullable<bool> AsyncAutoDelete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("asyncautodelete");
			}
			set
			{
				this.SetAttributeValue("asyncautodelete", value);
			}
		}
		
		/// <summary>
		/// Billing context this flow is in.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcontext")]
		public string BillingContext
		{
			get
			{
				return this.GetAttributeValue<string>("billingcontext");
			}
			set
			{
				this.SetAttributeValue("billingcontext", value);
			}
		}
		
		/// <summary>
		/// Business Process Type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessprocesstype")]
		public virtual workflow_businessprocesstype? BusinessProcessType
		{
			get
			{
				return ((workflow_businessprocesstype?)(EntityOptionSetEnum.GetEnum(this, "businessprocesstype")));
			}
			set
			{
				this.SetAttributeValue("businessprocesstype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Category of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public virtual workflow_category? Category
		{
			get
			{
				return ((workflow_category?)(EntityOptionSetEnum.GetEnum(this, "category")));
			}
			set
			{
				this.SetAttributeValue("category", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Business logic converted into client data
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientdata")]
		public string ClientData
		{
			get
			{
				return this.GetAttributeValue<string>("clientdata");
			}
			set
			{
				this.SetAttributeValue("clientdata", value);
			}
		}
		
		/// <summary>
		/// For Internal Use Only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientdataiscompressed")]
		public System.Nullable<bool> ClientDataIsCompressed
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("clientdataiscompressed");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Connection References related to this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionreferences")]
		public string ConnectionReferences
		{
			get
			{
				return this.GetAttributeValue<string>("connectionreferences");
			}
			set
			{
				this.SetAttributeValue("connectionreferences", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the process was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Create metadata for this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createmetadata")]
		public string CreateMetadata
		{
			get
			{
				return this.GetAttributeValue<string>("createmetadata");
			}
			set
			{
				this.SetAttributeValue("createmetadata", value);
			}
		}
		
		/// <summary>
		/// Stage of the process when triggered on Create.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createstage")]
		public virtual workflow_stage? CreateStage
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "createstage")));
			}
			set
			{
				this.SetAttributeValue("createstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Credentials related to this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentials")]
		public string Credentials
		{
			get
			{
				return this.GetAttributeValue<string>("credentials");
			}
			set
			{
				this.SetAttributeValue("credentials", value);
			}
		}
		
		/// <summary>
		/// Definition of the business logic of this workflow instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("definition")]
		public string Definition
		{
			get
			{
				return this.GetAttributeValue<string>("definition");
			}
			set
			{
				this.SetAttributeValue("definition", value);
			}
		}
		
		/// <summary>
		/// Stage of the process when triggered on Delete.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletestage")]
		public virtual workflow_stage? DeleteStage
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "deletestage")));
			}
			set
			{
				this.SetAttributeValue("deletestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Soft dependencies of this workflow instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependencies")]
		public string Dependencies
		{
			get
			{
				return this.GetAttributeValue<string>("dependencies");
			}
			set
			{
				this.SetAttributeValue("dependencies", value);
			}
		}
		
		/// <summary>
		/// Description of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Desktop flow modules related to this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("desktopflowmodules")]
		public string DesktopFlowModules
		{
			get
			{
				return this.GetAttributeValue<string>("desktopflowmodules");
			}
			set
			{
				this.SetAttributeValue("desktopflowmodules", value);
			}
		}
		
		/// <summary>
		/// comma separated list of one or more Dynamics First Party Solution Unique names that this workflow is in context of.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dynamicssolutioncontext")]
		public string DynamicsSolutionContext
		{
			get
			{
				return this.GetAttributeValue<string>("dynamicssolutioncontext");
			}
			set
			{
				this.SetAttributeValue("dynamicssolutioncontext", value);
			}
		}
		
		/// <summary>
		/// Shows the default image for the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated form.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("formid")]
		public System.Nullable<System.Guid> FormId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("formid");
			}
			set
			{
				this.SetAttributeValue("formid", value);
			}
		}
		
		/// <summary>
		/// Input parameters to the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inputparameters")]
		public string InputParameters
		{
			get
			{
				return this.GetAttributeValue<string>("inputparameters");
			}
			set
			{
				this.SetAttributeValue("inputparameters", value);
			}
		}
		
		/// <summary>
		/// Inputs definition for this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inputs")]
		public string Inputs
		{
			get
			{
				return this.GetAttributeValue<string>("inputs");
			}
			set
			{
				this.SetAttributeValue("inputs", value);
			}
		}
		
		/// <summary>
		/// Version in which the form is introduced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the process was created using the Microsoft Dynamics 365 Web application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscrmuiworkflow")]
		public System.Nullable<bool> IsCrmUIWorkflow
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscrmuiworkflow");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component can be customized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Defines whether other publishers can attach custom processing steps to this action
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomprocessingstepallowedforotherpublishers")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomProcessingStepAllowedForOtherPublishers
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomprocessingstepallowedforotherpublishers");
			}
			set
			{
				this.SetAttributeValue("iscustomprocessingstepallowedforotherpublishers", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Whether or not the steps in the process are executed in a single transaction.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("istransacted")]
		public System.Nullable<bool> IsTransacted
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("istransacted");
			}
			set
			{
				this.SetAttributeValue("istransacted", value);
			}
		}
		
		/// <summary>
		/// Language of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
		public System.Nullable<int> LanguageCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languagecode");
			}
			set
			{
				this.SetAttributeValue("languagecode", value);
			}
		}
		
		/// <summary>
		/// The source of the license entitlements.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("licenseentitledby")]
		public Microsoft.Xrm.Sdk.EntityReference LicenseEntitledBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("licenseentitledby");
			}
			set
			{
				this.SetAttributeValue("licenseentitledby", value);
			}
		}
		
		/// <summary>
		/// Additional metadata for this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("metadata")]
		public string Metadata
		{
			get
			{
				return this.GetAttributeValue<string>("metadata");
			}
			set
			{
				this.SetAttributeValue("metadata", value);
			}
		}
		
		/// <summary>
		/// Shows the mode of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mode")]
		public virtual workflow_mode? Mode
		{
			get
			{
				return ((workflow_mode?)(EntityOptionSetEnum.GetEnum(this, "mode")));
			}
			set
			{
				this.SetAttributeValue("mode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the process was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Flow modify metadata used for telemetry, etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifymetadata")]
		public string ModifyMetadata
		{
			get
			{
				return this.GetAttributeValue<string>("modifymetadata");
			}
			set
			{
				this.SetAttributeValue("modifymetadata", value);
			}
		}
		
		/// <summary>
		/// Name of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the process is able to run as an on-demand process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ondemand")]
		public System.Nullable<bool> OnDemand
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ondemand");
			}
			set
			{
				this.SetAttributeValue("ondemand", value);
			}
		}
		
		/// <summary>
		/// Outputs definition for this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outputs")]
		public string Outputs
		{
			get
			{
				return this.GetAttributeValue<string>("outputs");
			}
			set
			{
				this.SetAttributeValue("outputs", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the definition for process activation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentworkflowid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentWorkflowId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentworkflowid");
			}
		}
		
		/// <summary>
		/// For Internal Use Only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("planverified")]
		public System.Nullable<bool> PlanVerified
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("planverified");
			}
			set
			{
				this.SetAttributeValue("planverified", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the plug-in type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plugintypeid")]
		public Microsoft.Xrm.Sdk.EntityReference PluginTypeId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("plugintypeid");
			}
		}
		
		/// <summary>
		/// Primary entity for the process. The process can be associated for one or more SDK operations defined on the primary entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentity")]
		public string PrimaryEntity
		{
			get
			{
				return this.GetAttributeValue<string>("primaryentity");
			}
			set
			{
				this.SetAttributeValue("primaryentity", value);
			}
		}
		
		/// <summary>
		/// Type the business process flow order.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processorder")]
		public System.Nullable<int> ProcessOrder
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("processorder");
			}
			set
			{
				this.SetAttributeValue("processorder", value);
			}
		}
		
		/// <summary>
		/// Contains the role assignment for the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processroleassignment")]
		public string ProcessRoleAssignment
		{
			get
			{
				return this.GetAttributeValue<string>("processroleassignment");
			}
			set
			{
				this.SetAttributeValue("processroleassignment", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated form for process trigger.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processtriggerformid")]
		public System.Nullable<System.Guid> ProcessTriggerFormId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processtriggerformid");
			}
			set
			{
				this.SetAttributeValue("processtriggerformid", value);
			}
		}
		
		/// <summary>
		/// Scope of the process trigger.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processtriggerscope")]
		public virtual processtrigger_scope? ProcessTriggerScope
		{
			get
			{
				return ((processtrigger_scope?)(EntityOptionSetEnum.GetEnum(this, "processtriggerscope")));
			}
			set
			{
				this.SetAttributeValue("processtriggerscope", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Indicates the rank for order of execution for the synchronous workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rank")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rank");
			}
			set
			{
				this.SetAttributeValue("rank", value);
			}
		}
		
		/// <summary>
		/// The renderer type of Workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rendererobjecttypecode")]
		public string RendererObjectTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("rendererobjecttypecode");
			}
			set
			{
				this.SetAttributeValue("rendererobjecttypecode", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcecontainer")]
		public string ResourceContainer
		{
			get
			{
				return this.GetAttributeValue<string>("resourcecontainer");
			}
			set
			{
				this.SetAttributeValue("resourcecontainer", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourceid")]
		public System.Nullable<System.Guid> ResourceId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("resourceid");
			}
			set
			{
				this.SetAttributeValue("resourceid", value);
			}
		}
		
		/// <summary>
		/// Specifies the system user account under which a workflow executes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runas")]
		public virtual workflow_runas? RunAs
		{
			get
			{
				return ((workflow_runas?)(EntityOptionSetEnum.GetEnum(this, "runas")));
			}
			set
			{
				this.SetAttributeValue("runas", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Schema version for this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schemaversion")]
		public string SchemaVersion
		{
			get
			{
				return this.GetAttributeValue<string>("schemaversion");
			}
			set
			{
				this.SetAttributeValue("schemaversion", value);
			}
		}
		
		/// <summary>
		/// Scope of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scope")]
		public virtual workflow_scope? Scope
		{
			get
			{
				return ((workflow_scope?)(EntityOptionSetEnum.GetEnum(this, "scope")));
			}
			set
			{
				this.SetAttributeValue("scope", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the SDK Message associated with this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sdkmessageid")]
		public Microsoft.Xrm.Sdk.EntityReference SdkMessageId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sdkmessageid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Status of the workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual workflow_statecode? StateCode
		{
			get
			{
				return ((workflow_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual workflow_statuscode? StatusCode
		{
			get
			{
				return ((workflow_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Indicates whether the process can be included in other processes as a child process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subprocess")]
		public System.Nullable<bool> Subprocess
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("subprocess");
			}
			set
			{
				this.SetAttributeValue("subprocess", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suspensionreasondetails")]
		public string SuspensionReasonDetails
		{
			get
			{
				return this.GetAttributeValue<string>("suspensionreasondetails");
			}
			set
			{
				this.SetAttributeValue("suspensionreasondetails", value);
			}
		}
		
		/// <summary>
		/// Select whether synchronous workflow failures will be saved to log files.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncworkflowlogonfailure")]
		public System.Nullable<bool> SyncWorkflowLogOnFailure
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("syncworkflowlogonfailure");
			}
			set
			{
				this.SetAttributeValue("syncworkflowlogonfailure", value);
			}
		}
		
		/// <summary>
		/// The throttling behavior type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("throttlingbehavior")]
		public virtual workflow_throttlingbehaviortype? ThrottlingBehavior
		{
			get
			{
				return ((workflow_throttlingbehaviortype?)(EntityOptionSetEnum.GetEnum(this, "throttlingbehavior")));
			}
			set
			{
				this.SetAttributeValue("throttlingbehavior", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Indicates whether the process will be triggered when the primary entity is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggeroncreate")]
		public System.Nullable<bool> TriggerOnCreate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("triggeroncreate");
			}
			set
			{
				this.SetAttributeValue("triggeroncreate", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the process will be triggered on deletion of the primary entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggerondelete")]
		public System.Nullable<bool> TriggerOnDelete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("triggerondelete");
			}
			set
			{
				this.SetAttributeValue("triggerondelete", value);
			}
		}
		
		/// <summary>
		/// Attributes that trigger the process when updated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggeronupdateattributelist")]
		public string TriggerOnUpdateAttributeList
		{
			get
			{
				return this.GetAttributeValue<string>("triggeronupdateattributelist");
			}
			set
			{
				this.SetAttributeValue("triggeronupdateattributelist", value);
			}
		}
		
		/// <summary>
		/// For Internal Use Only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trustedaccess")]
		public System.Nullable<bool> TrustedAccess
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("trustedaccess");
			}
		}
		
		/// <summary>
		/// Type of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public virtual workflow_type? Type
		{
			get
			{
				return ((workflow_type?)(EntityOptionSetEnum.GetEnum(this, "type")));
			}
			set
			{
				this.SetAttributeValue("type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uidata")]
		public string UIData
		{
			get
			{
				return this.GetAttributeValue<string>("uidata");
			}
		}
		
		/// <summary>
		/// Type of the UI Flow process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uiflowtype")]
		public virtual workflow_uiflowtype? UIFlowType
		{
			get
			{
				return ((workflow_uiflowtype?)(EntityOptionSetEnum.GetEnum(this, "uiflowtype")));
			}
			set
			{
				this.SetAttributeValue("uiflowtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique name of the process
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniquename")]
		public string UniqueName
		{
			get
			{
				return this.GetAttributeValue<string>("uniquename");
			}
			set
			{
				this.SetAttributeValue("uniquename", value);
			}
		}
		
		/// <summary>
		/// Select the stage a process will be triggered on update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("updatestage")]
		public virtual workflow_stage? UpdateStage
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "updatestage")));
			}
			set
			{
				this.SetAttributeValue("updatestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public System.Nullable<System.Guid> WorkflowId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("workflowid");
			}
			set
			{
				this.SetAttributeValue("workflowid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.WorkflowId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowidunique")]
		public System.Nullable<System.Guid> WorkflowIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("workflowidunique");
			}
		}
		
		/// <summary>
		/// XAML that defines the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("xaml")]
		public string Xaml
		{
			get
			{
				return this.GetAttributeValue<string>("xaml");
			}
			set
			{
				this.SetAttributeValue("xaml", value);
			}
		}
		
		/// <summary>
		/// 1:N workflow_active_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<OpenStrata.Xrm.Sdk.Workflow> Referencedworkflow_active_workflow
		{
			get
			{
				return this.GetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Workflow_licenseentitledby
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<OpenStrata.Xrm.Sdk.Workflow> ReferencedWorkflow_licenseentitledby
		{
			get
			{
				return this.GetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N workflow_parent_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<OpenStrata.Xrm.Sdk.Workflow> Referencedworkflow_parent_workflow
		{
			get
			{
				return this.GetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<OpenStrata.Xrm.Sdk.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:1 workflow_active_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeworkflowid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public OpenStrata.Xrm.Sdk.Workflow Referencingworkflow_active_workflow
		{
			get
			{
				return this.GetRelatedEntity<OpenStrata.Xrm.Sdk.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 Workflow_licenseentitledby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("licenseentitledby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public OpenStrata.Xrm.Sdk.Workflow ReferencingWorkflow_licenseentitledby
		{
			get
			{
				return this.GetRelatedEntity<OpenStrata.Xrm.Sdk.Workflow>("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<OpenStrata.Xrm.Sdk.Workflow>("Workflow_licenseentitledby", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 workflow_parent_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentworkflowid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public OpenStrata.Xrm.Sdk.Workflow Referencingworkflow_parent_workflow
		{
			get
			{
				return this.GetRelatedEntity<OpenStrata.Xrm.Sdk.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
	}
}
#pragma warning restore CS1591
